# =================================
# ESG DART API Service 설정 (Config Server용)
# 역할: 금융감독원 DART API 연동, 기업 공시정보 수집, 파트너사 뉴스 모니터링
# =================================

server:
  port: 8089
  servlet:
    context-path: /api/v1
    encoding:
      charset: UTF-8
      enabled: true
  shutdown: graceful # graceful shutdown 활성화

spring:
  application:
    name: dart-api-service

  # =================================
  # 데이터베이스 설정 - MySQL
  # =================================
  datasource:
    url: ${DB_URL:jdbc:mysql://localhost:3306/esg_dart}
    username: ${DB_USER:esg_user}
    password: ${DB_PASS:esg_password}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 5
      minimum-idle: 5
      pool-name: dartServiceHikariPool
      connection-timeout: 30000
      idle-timeout: 600000
      validation-timeout: 5000
      connection-test-query: SELECT 1

  # =================================
  # JPA/Hibernate 설정
  # =================================
  jpa:
    hibernate:
      ddl-auto: ${JPA_DDL_AUTO:update} # create, update, validate, none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
    show-sql: ${JPA_SHOW_SQL:true}
    properties:
      hibernate:
        format_sql: false
        dialect: org.hibernate.dialect.MySQL8Dialect
        use_sql_comments: true
        default_batch_fetch_size: 100

  # =================================
  # Kafka 설정
  # =================================
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9093}
    consumer:
      group-id: dart-api-group
      auto-offset-reset: earliest
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    listener:
      auto-startup: true # Kafka 리스너 자동 시작 활성화

# =================================
# DART API 설정
# =================================
dart:
  api:
    key: ${DART_API_KEY:your-dart-api-key}
    base-url: ${DART_API_BASE_URL:https://opendart.fss.or.kr}
    cache:
      companyProfiles:
        ttl: 3600 # 초 단위 (1시간)
        maxSize: 1000
      disclosureSearch:
        ttl: 3600 # 초 단위 (1시간)
        maxSize: 500
      dartCorpCodes:
        ttl: 86400 # 24시간 (초 단위)
        maxSize: 10000

# =================================
# 파트너 API 설정
# =================================
partner:
  api:
    base-url: ${PARTNER_API_BASE_URL:https://partner-api.example.com}
    client-id: ${PARTNER_API_CLIENT_ID:your-client-id}
    client-secret: ${PARTNER_API_CLIENT_SECRET:your-client-secret}

# =================================
# Kafka 토픽 설정
# =================================
kafka:
  topic:
    company-profile: dart-company-profile
    disclosure: dart-disclosure
    corp-code: dart-corp-code
    partner-company: partner-company-updated

# =================================
# Resilience4j 설정 (API 호출 제한)
# =================================
resilience4j:
  ratelimiter:
    instances:
      dartApi:
        # WebClientService에서 사용한 RateLimiter 이름
        limitForPeriod: 10 # 기간 내 허용 호출 수
        limitRefreshPeriod: 1s # 제한 초기화 주기 (예: 1s, 500ms)
        timeoutDuration: 1s # 요청 대기 시간

# =================================
# Eureka Client 설정
# =================================
eureka:
  client:
    enabled: true
    service-url:
      defaultZone: ${EUREKA_SERVICE_URL:http://localhost:8761/eureka/}
    register-with-eureka: true
    fetch-registry: true
    registry-fetch-interval-seconds: 30
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90
    metadata-map:
      version: ${spring.application.version:1.0.0}
      description: "DART API 서비스 - 금융감독원 공시정보 수집 및 분석"

# =================================
# Actuator 모니터링 설정
# =================================
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,env,configprops,httptrace
      base-path: /actuator
  endpoint:
    health:
      show-details: always
  info:
    env:
      enabled: true

# =================================
# 스프링 시큐리티 기본 설정 (개발용)
# =================================
spring.security.user.name: ${SECURITY_USER_NAME:admin}
spring.security.user.password: ${SECURITY_USER_PASSWORD:admin}

# =================================
# 로깅 설정
# =================================
logging:
  level:
    root: INFO
    com.example.javaversion: DEBUG
    org.apache.kafka.clients: INFO
    org.springframework.kafka: INFO
    org.springframework.web: ${WEB_LOG_LEVEL:INFO}
    org.hibernate.SQL: ${LOG_SQL:false}
    org.springframework.transaction: ${TRANSACTION_LOG_LEVEL:INFO}
  pattern:
    console: "%clr(%d{HH:mm:ss.SSS}){faint} %clr([%thread]){magenta} %clr(%-5level){highlight} %clr(%logger{36}){cyan} - %msg%n"
